{"version":3,"file":"static/js/777.d8ded29e.chunk.js","mappings":"mOACA,EAAoF,wCAApF,EAAsJ,6CAAtJ,EAAkN,kCAAlN,EAAuQ,sCAAvQ,EAAoU,0C,mBCcpU,EAXmB,SAACA,GAChB,OAAKA,EAAMC,YAAYC,SAKnB,gBAAKC,UAAWC,EAAqBC,IAAKL,EAAMC,YAAYK,gBAAgBC,KACvEC,IAAKR,EAAMC,YAAYC,QAAQO,OAAOC,MAAQV,EAAMC,YAAYC,QAAQO,OAAOC,MAAQV,EAAMC,YAAYK,gBAAgBK,OALvH,SAAC,IAAD,GAOd,ECJD,EANoB,SAACX,GACjB,OACI,cAAGG,UAAWC,EAAd,SAAwCJ,EAAMC,YAAYK,gBAAgBC,MAEjF,ECOD,EAX2B,SAACP,GAExB,OACI,iBAAKG,UAAWC,EAAhB,UACMJ,EAAMC,YAAYK,gBAAgBM,UAAY,2CAAmBZ,EAAMC,YAAYK,gBAAgBM,YAAgB,GACnHZ,EAAMC,YAAYK,gBAAgBO,MAAQ,2CAAmBb,EAAMC,YAAYK,gBAAgBO,QAAY,GAC3Gb,EAAMC,YAAYK,gBAAgBQ,WAAa,2CAAmBd,EAAMC,YAAYK,gBAAgBQ,aAAiB,KAGlI,E,GCV2BC,EAAAA,U,QCyC5B,EAxC+B,SAACf,GAE5B,OAA8BgB,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAShB,EAAMmB,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUpB,EAAMmB,OACnB,GAAE,CAACnB,EAAMmB,SAeN,OACI,4BACMF,IACE,0BACI,iBAAMK,cAjBD,WACrBJ,GAAY,EACf,EAemB,SAAwClB,EAAMmB,QAAU,uBAG/DF,IACG,0BACI,kBAAOM,WAAW,EAAMC,OAlBjB,WACvBN,GAAY,GACZlB,EAAMyB,aAAaN,EACtB,EAgB0BO,SAdJ,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,MAC7B,EAYoDA,MAAOV,QAK3D,ECXL,EApBoB,SAACnB,GACjB,OAAKA,EAAME,SAKP,0BAEI,iBAAKC,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAYH,YAAaD,EAAM8B,SAC/B,iBAAK3B,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAaH,YAAaD,EAAM8B,SAChC,SAAC,EAAD,CAAwBX,OAAQnB,EAAMmB,OAAQM,aAAczB,EAAMyB,gBAClE,SAAC,EAAD,CAAoBxB,YAAaD,EAAM8B,iBAX5C,SAAC,IAAD,GAgBd,E,UC1BD,EAA0B,yBAA1B,EAA2D,uBCA3D,EAAuB,mBAAvB,EAAoD,sBCoBpD,EAlBa,SAAC9B,GACV,OACI,iBAAKG,UAAU,OAAf,WACI,gBAAKK,IAAI,oKAAoKH,IAAI,UAAUF,UAAW4B,KACtM,iBAAM5B,UAAU,WAAhB,wBACA,gBAAKA,UAAW4B,EAAhB,SACM/B,EAAMgC,WAEZ,iBAAK7B,UAAU,gBAAf,WACI,sCACA,sCACEH,EAAMiC,WAKvB,E,4BCZDC,OAAOlC,MAAQ,GAEf,IAAMmC,EAAUpB,EAAAA,MAAW,SAACf,GACxBoC,QAAQC,IAAI,UACZH,OAAOlC,MAAMsC,KAAKtC,GAClB,IAEIuC,EAFQvC,EAAM8B,MAEAU,UAAUC,KAAI,SAAAC,GAAE,OAAK,SAAC,EAAD,CAAMV,QAASU,EAAGV,QAASC,MAAK,UAAKS,EAAGT,MAAR,WAArC,IAOlC,OAAO,gBAAK9B,UAAWC,EAAhB,UACH,4BACI,sCACA,SAACuC,EAAD,CAAgBC,WARP,SAACC,GACd7C,EAAM8C,QAAQD,EAAOE,aACrBF,EAAOE,YAAc,EACxB,KAMO,gBAAK5C,UAAWC,EAAhB,SACKmC,QAIhB,IAEKI,EAAiB,SAAC3C,GACpB,OACI,SAAC,KAAD,CAAQgD,cAAe,CAACD,YAAa,IAAKE,SAAUjD,EAAM4C,WAC1DM,iBAAkBC,EAAAA,GAAW,CACzBJ,YAAaI,EAAAA,KACRC,IAAI,EAAG,IACPC,SAAS,MAJlB,UAMI,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAiB9C,KAAM,cACN+C,YAAa,2BAElC,mBAAQC,KAAM,SAAd,0BAIf,EAED,I,UC7BA,GAFyBC,EAAAA,EAAAA,KAfH,SAAC1B,GACnB,MAAO,CACHA,MAAOA,EAAM2B,YAEpB,IAEuB,SAACC,GACrB,MAAO,CACHZ,QAAS,SAACC,GACNW,GAASC,EAAAA,EAAAA,IAAqBZ,GACjC,EAER,GAGwBS,CAA4CrB,GCRrE,GAF6BqB,EAAAA,EAAAA,KANL,SAACxD,GACrB,MAAO,CACH8B,MAAO9B,EAAMyD,YAEpB,GAE4BD,CAAyBI,GCKtD,EARgB,SAAC5D,GACb,OAAO,4BACH,SAAC,EAAD,CAAsBE,QAASF,EAAME,QAASiB,OAAQnB,EAAMmB,OAAQM,aAAczB,EAAMyB,gBACxF,SAAC,EAAD,MAGP,E,oBCMA,IAGKoC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAmBD,OAnBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAEF,WACI,IAAIC,EAASC,KAAK/D,MAAMgE,OAAOC,OAAOH,OAEjCA,IACDA,EAASC,KAAK/D,MAAMkE,mBAGhBH,KAAK/D,MAAMgE,OAAOG,SAAS,UAGnCJ,KAAK/D,MAAMoE,eAAeN,GAC1BC,KAAK/D,MAAMqE,UAAUP,EACxB,uBAED,WACI,OAAO,SAAC,GAAD,kBAAaC,KAAK/D,OAAlB,IAAyBE,QAAS6D,KAAK/D,MAAME,QACpCiB,OAAQ4C,KAAK/D,MAAMmB,OAAQM,aAAcsC,KAAK/D,MAAMyB,eACvE,OAnBCoC,CAAyB9C,EAAAA,WAgC/B,GAAeuD,EAAAA,EAAAA,KACXd,EAAAA,EAAAA,KATkB,SAAC1B,GAAD,MAAY,CAC9B5B,QAAS4B,EAAM2B,YAAYvD,QAC3BiB,OAAQW,EAAM2B,YAAYtC,OAC1B+C,iBAAkBpC,EAAMyC,KAAKC,GAC7BC,OAAQ3C,EAAMyC,KAAKE,OAJD,GASO,CAACL,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW5C,aAAAA,EAAAA,MA/CzD,SAAoBiD,GAUhB,OATA,SAAiC1E,GAC7B,IAAI2E,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,MACb,OACI,SAACJ,GAAD,kBAAe1E,GAAf,IAAsBgE,OAAQ,CAACW,SAAAA,EAAUR,SAAAA,EAAUF,OAAAA,KAE1D,CAGJ,GAmCD,CAIEJ,E","sources":["webpack://samurai-network/./src/components/Profile/Profileinfo/Profileinfo.module.css?e2a6","components/Profile/Profileinfo/Profilepic.jsx","components/Profile/Profileinfo/Profilename.jsx","components/Profile/Profileinfo/Profiledescription.jsx","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","webpack://samurai-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profileinfo/ProfileinfoContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_pic\":\"Profileinfo_profile_pic__dpXIs\",\"description__block\":\"Profileinfo_description__block__9WyqE\",\"user_description__block\":\"Profileinfo_user_description__block__eSs6K\",\"main_userpic\":\"Profileinfo_main_userpic__QG09t\",\"profile_username\":\"Profileinfo_profile_username__dNqdV\",\"profile__description\":\"Profileinfo_profile__description__i8QAR\"};","import React from \"react\";\r\nimport styles from \"./Profileinfo.module.css\"\r\nimport Preloader from \"../../Common/Prelosder/Prelosder\";\r\n\r\nconst Profilepic = (props) =>{\r\n    if (!props.profileData.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <img className={styles.main_userpic} alt={props.profileData.profileUserData.name}\r\n             src={props.profileData.profile.photos.large ? props.profileData.profile.photos.large : props.profileData.profileUserData.img}/>\r\n    )\r\n}\r\n\r\nexport default Profilepic;","import React from \"react\";\r\nimport styles from \"./Profileinfo.module.css\"\r\n\r\nconst Profilename = (props) =>{\r\n    return (\r\n        <p className={styles.profile_username}>{props.profileData.profileUserData.name}</p>\r\n    )\r\n}\r\n\r\nexport default Profilename;","import React from \"react\";\r\nimport styles from \"./Profileinfo.module.css\"\r\n\r\nconst Profiledescription = (props) => {\r\n\r\n    return (\r\n        <div className={styles.profile__description}>\r\n            {(props.profileData.profileUserData.birthday) ? <p>Date of Birth: {props.profileData.profileUserData.birthday}</p> : ''}\r\n            {(props.profileData.profileUserData.city) ? <p>Date of Birth: {props.profileData.profileUserData.city}</p> : ''}\r\n            {(props.profileData.profileUserData.education) ? <p>Date of Birth: {props.profileData.profileUserData.education}</p> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profiledescription;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n       this.setState({\r\n           editMode: true\r\n       })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"type your status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport styles from './Profileinfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \"type your status\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input autoFocus={true} onBlur={deactivateEditMode}\r\n                               onChange={onStatusChange} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from './Profileinfo.module.css';\r\nimport Profilepic from \"./Profilepic\";\r\nimport Profilename from \"./Profilename\";\r\nimport Profiledescription from \"./Profiledescription\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport Preloader from \"../../Common/Prelosder/Prelosder\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst Profileinfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={styles.profile_pic}></div>*/}\r\n            <div className={styles.description__block}>\r\n                <Profilepic profileData={props.state}/>\r\n                <div className={styles.user_description__block}>\r\n                    <Profilename profileData={props.state}/>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                    <Profiledescription profileData={props.state}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profileinfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__zfHPw\",\"posts\":\"MyPosts_posts__h06sR\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WOFI-\",\"userpic\":\"Post_userpic__infWh\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <img src=\"https://thumbs.dreamstime.com/b/male-anonymous-avatar-person-userpic-web-profile-male-anonymous-avatar-person-private-userpic-web-profile-character-135774800.jpg\" alt=\"userpic\" className={s.userpic} />\r\n            <span className=\"username\">User Name</span>\r\n            <div className={s.item}>\r\n                { props.message }\r\n            </div>\r\n            <div className=\"post__buttons\">\r\n                <button>Like</button>\r\n                <button>Share</button>\r\n                { props.likes }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\"\r\nimport {MyTextareaInput} from \"../../Forms/FormsControl\";\r\n\r\nwindow.props = [];\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    console.log(\"RENDER\");\r\n    window.props.push(props)\r\n    let state = props.state;\r\n\r\n    let posts = state.postsData.map(el => (<Post message={el.message} likes={`${el.likes} likes`}/>));\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostForm);\r\n        values.newPostForm = '';\r\n    }\r\n\r\n    return <div className={styles.content}>\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm addNewPost={addNewPost}/>\r\n            <div className={styles.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <Formik initialValues={{newPostForm: \"\"}} onSubmit={props.addNewPost}\r\n        validationSchema={Yup.object({\r\n            newPostForm: Yup.string()\r\n                .min(1, '')\r\n                .required('')\r\n        })}>\r\n            <Form>\r\n                <div>\r\n                    <MyTextareaInput name={\"newPostForm\"}\r\n                                     placeholder={\"type here please...\"} />\r\n                </div>\r\n                <button type={\"submit\"}>Add post</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from './../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostForm) => {\r\n            dispatch(addPostActionCreator(newPostForm));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatcToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Profileinfo from \"./Profileinfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (props) => {\r\n    return {\r\n        state: props.profilePage\r\n    }\r\n}\r\n\r\nconst ProfileinfoContainer = connect(mapStateToProps)(Profileinfo);\r\n\r\nexport default ProfileinfoContainer;","import React from \"react\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileinfoContainer from \"./Profileinfo/ProfileinfoContainer\"\r\nimport ProfileContainer from \"./ProfileContainer\";\r\nimport {updateStatus} from \"../../redux/profile-reducer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileinfoContainer profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n///////// I use React RouterV6, so I do it a different  way\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component {...props} router={{location, navigate, params}}/>\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        //let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                //this.props.router.location.pathname(\"/login\");\r\n                this.props.router.navigate(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile}\r\n                        status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    };\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter/*,\r\n    withAuthRedirect*/\r\n)(ProfileContainer);"],"names":["props","profileData","profile","className","styles","alt","profileUserData","name","src","photos","large","img","birthday","city","education","React","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","state","s","message","likes","window","MyPosts","console","log","push","posts","postsData","map","el","AddNewPostForm","addNewPost","values","addPost","newPostForm","initialValues","onSubmit","validationSchema","Yup","min","required","placeholder","type","connect","profilePage","dispatch","addPostActionCreator","Profileinfo","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","compose","auth","id","isAuth","Component","location","useLocation","useNavigate","useParams"],"sourceRoot":""}