{"version":3,"file":"static/js/354.acd26932.chunk.js","mappings":"2LACA,GAAgB,QAAU,yBAAyB,gBAAkB,iCAAiC,iBAAmB,kCAAkC,OAAS,wBAAwB,YAAc,6BAA6B,QAAU,0B,SCOjP,EALgB,SAACA,GACb,OACI,cAAGC,UAAWC,EAAAA,QAAd,SAA+BF,EAAMG,SAE5C,E,UCKD,EARuB,SAACH,GACpB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OACI,eAAIJ,UAAWC,EAAAA,iBAAf,UACI,SAAC,KAAD,CAASI,GAAIF,EAAMH,UAAW,SAAAM,GAAE,OAAIA,EAAGC,SAAWN,EAAAA,OAAgBA,EAAAA,gBAAlC,EAAhC,SAA4FF,EAAMS,QAG7G,E,sCCkCKC,EAAiB,SAACV,GACpB,OACI,SAAC,KAAD,CAAQW,cAAe,CAACC,eAAgB,IAChCC,iBAAkBC,EAAAA,GAAW,CACzBF,eAAgBE,EAAAA,KACXC,IAAI,EAAG,IACPC,SAAS,+BAElBC,SAAUjB,EAAMkB,cANxB,UAOI,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAiBT,KAAM,iBACVU,YAAY,yBAQ7B,mBAAQC,KAAM,SAAd,8BAIf,EAED,EA9DgB,SAACpB,GAEb,IAAIqB,EAAQrB,EAAMqB,MAEdC,EAAuBD,EAAME,iBAAiBC,KAAI,SAAAjB,GAAE,OAAK,SAAC,EAAD,CAASJ,QAASI,EAAGJ,SAAcI,EAAGF,GAA3C,IACpDoB,EAAiBJ,EAAMK,mBAAmBF,KAAI,SAAAG,GAAM,OACpD,SAAC,EAAD,CAAgBlB,KAAMkB,EAAOlB,KAAMJ,GAAIsB,EAAOtB,IAASsB,EAAOtB,GADV,IAQxD,OAAKL,EAAM4B,QAIP,4BACI,eAAI3B,UAAWC,EAAAA,QAAf,yBACA,iBAAKD,UAAWC,EAAAA,gBAAhB,WACI,gBAAKD,UAAWC,EAAAA,UAAhB,UACI,eAAID,UAAWC,EAAAA,iBAAf,SACKuB,OAGT,4BACI,gBAAKxB,UAAWC,EAAAA,YAAhB,SACKoB,KAEL,SAACZ,EAAD,CAAgBQ,cArBZ,SAACW,GACjB7B,EAAM8B,YAAYD,EAAOjB,gBACzBiB,EAAOjB,eAAiB,EAC3B,cAEyB,SAAC,KAAD,CAAUN,GAAI,UAqB3C,E,2DCvCGyB,EAA6B,SAACV,GAAD,MAAY,CACzCO,OAAQP,EAAMW,KAAKJ,OADU,ECuBjC,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACb,GACnB,MAAO,CACHA,MAAOA,EAAMc,aAEpB,IACuB,SAACC,GACrB,MAAO,CACHN,YAAa,SAAClB,GACVwB,GAASC,EAAAA,EAAAA,IAAwBzB,GACpC,EAER,KDjB+B,SAAC0B,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKxC,MAAM4B,QAET,SAACU,GAAD,UAAeE,KAAKxC,SAFI,SAAC,KAAD,CAAUM,GAAI,UAGhD,KAPsC,GAEXmC,EAAAA,WAWhC,OAFqCP,EAAAA,EAAAA,IAAQH,EAARG,CAAoCK,EAG5E,GCKD,CAGEG,E","sources":["webpack://samurai-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/ConversationMessages/ConversationMessages.jsx","components/Dialogs/ChatmatePeople/ChatmatePeople.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Dialogs_heading__-GOQu\",\"dialog__content\":\"Dialogs_dialog__content__KA9nR\",\"chatemate_person\":\"Dialogs_chatemate_person__N5wNf\",\"active\":\"Dialogs_active__VAq1B\",\"converation\":\"Dialogs_converation__OTzKr\",\"message\":\"Dialogs_message__q1XQ4\"};","import React from \"react\";\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <p className={styles.message}>{props.message}</p>\r\n    )\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport styles from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ChatmatePerson = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <li className={styles.chatemate_person}>\r\n            <NavLink to={path} className={el => el.isActive ? styles.active : styles.chatemate_person}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\nexport default ChatmatePerson;","import React from \"react\";\r\nimport styles from './Dialogs.module.css';\r\nimport Message from \"./ConversationMessages/ConversationMessages\";\r\nimport ChatmatePerson from \"./ChatmatePeople/ChatmatePeople\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport {MyTextareaInput, MyTextInput} from \"../Forms/FormsControl\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.state;\r\n\r\n    let conversationMessages = state.conversationData.map(el => (<Message message={el.message} key={el.id}/>));\r\n    let chatmatePeople = state.chatmatePeopleData.map(person => (\r\n        <ChatmatePerson name={person.name} id={person.id} key={person.id}/>));\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.addMessageForm);\r\n        values.addMessageForm = \"\";\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.heading}>MY DIALOGS</h2>\r\n            <div className={styles.dialog__content}>\r\n                <div className={styles.chatmates}>\r\n                    <ul className={styles.chatmate__people}>\r\n                        {chatmatePeople}\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.converation}>\r\n                        {conversationMessages}\r\n                    </div>\r\n                    <AddMessageForm addNewMessage={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Formik initialValues={{addMessageForm: ''}}\r\n                validationSchema={Yup.object({\r\n                    addMessageForm: Yup.string()\r\n                        .min(1, '')\r\n                        .required('Please, type your message'),\r\n                })}\r\n                onSubmit={props.addNewMessage}>\r\n            <Form>\r\n                <div>\r\n                    <MyTextareaInput name={\"addMessageForm\"}\r\n                                 placeholder='type your message'/>\r\n{/*\r\n                    <Field name={\"addMessageForm\"} as={\"textarea\"}\r\n                           placeholder='type your message'>\r\n                    </Field>\r\n                    <ErrorMessage name={\"addMessageForm\"}/>\r\n*/}\r\n                </div>\r\n                <button type={\"submit\"}>Send message</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addNewMessageTextActionCreator,\r\n} from './../../redux/messages-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport Message from \"./ConversationMessages/ConversationMessages\";\r\nimport ChatmatePerson from \"./ChatmatePeople/ChatmatePeople\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (addMessageForm) => {\r\n            dispatch(addMessageActionCreator(addMessageForm));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatcToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;"],"names":["props","className","styles","message","path","id","to","el","isActive","name","AddMessageForm","initialValues","addMessageForm","validationSchema","Yup","min","required","onSubmit","addNewMessage","placeholder","type","state","conversationMessages","conversationData","map","chatmatePeople","chatmatePeopleData","person","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","messagesPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}